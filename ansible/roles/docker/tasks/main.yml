- name: Install aptitude using apt
  apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

- name: Install required system packages
  apt: name={{ item }} state=latest update_cache=yes
  loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'python-pip', 'virtualenv', 'python3-setuptools']

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu bionic stable
    state: present

- name: Update apt and install docker-ce
  apt: update_cache=yes name=docker-ce state=latest

- name: Install Docker Module for Python
  pip:
    name: docker

- name: Install Docker Compose
  get_url:
    url: https://github.com/docker/compose/releases/download/1.27.4/docker-compose-Linux-x86_64
    dest: /usr/local/bin/docker-compose
    mode: 0755

- name: Create a symbolic link
  file:
    src: /usr/local/bin/docker-compose
    dest: /usr/bin/docker-compose
    state: link

- name: Log into DockerHub
  docker_login:
    username: "{{ docker_user }}"
    password: "{{ docker_pwd }}"
    email: a.briukhanov@gmail.com

- name: Pull default Docker image
  docker_image:
    name: "wibob/intermine_dev_jenk:{{env_name}}"
    source: pull

- name: Running Jenkins Image
  docker_container:
   name: "Jenkins"
   image: "wibob/intermine_dev_jenk:{{env_name}}"
   state: started
   ports:
     - "8080:8080"
     - "50000:50000"
#
#
# - name: wait for Jenkins to start
#   wait_for: port=8080

# # Creates the number of containers defined by the variable create_containers, using values from vars file
# - name: Create default containers
#   docker_container:
#     name: "{{ default_container_name }}{{ item }}"
#     image: "{{ default_container_image }}"
#     command: "{{ default_container_command }}"
#     state: present
#   with_sequence: count={{ create_containers }}
