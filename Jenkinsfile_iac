pipeline {

  agent {
    label "master"
  }
  options {
       buildDiscarder(logRotator(numToKeepStr: '7', artifactNumToKeepStr: '7'))
     }
  environment {
      AWS_CRED=credentials('AWS-pipeline')
      AWS_ACCESS_KEY_ID = "${env.AWS_CRED_USR}"
      AWS_SECRET_ACCESS_KEY = "${env.AWS_CRED_PSW}"
      TF_VAR_private_key_ec2 = credentials('wibob-Frankfurt-file')
      DOCKERHUB_CRED = credentials('DockerHub-wibob')
      TF_VAR_DH_USER = "${env.DOCKERHUB_CRED_USR}"
      TF_VAR_DH_PWD = "${env.DOCKERHUB_CRED_PSW}"
      GITHUB_TOKEN=credentials('repohook')
      TF_VAR_GITHUB_USER = "${env.GITHUB_TOKEN_USR}"
      TF_VAR_GITHUB_TOKEN = "${env.GITHUB_TOKEN_PSW}"
  }

  stages {
        // stage ('checkout git') {
        //     steps {
        //             git url: 'git@github.com:briukhanov/epam_lab_final.git',
        //             credentialsId: 'github-ssh-key',
        //             branch: 'master'
        //             sh 'echo "Build by Jenkins Build# $BUILD_ID" >> ./build_id.txt'
        //     }
        // }

        stage('Check Terraform version') {
            steps {
              sh 'terraform --version'
            }
        }
        stage('Provision infrastructure (init)') {

            steps { dir ('terraform') {
                sh '''
                terraform init -input=false
                terraform workspace select dev
                '''
              }
            }
        }
        stage('Provision infrastructure (plan)') {

            steps { dir ('terraform') {

                sh 'cp $TF_VAR_private_key_ec2 ../aws.pem'
                sh 'terraform plan -out=tfplan -input=false'
              }
            }
        }
        stage('Provision infrastructure (apply)') {

            steps { dir ('terraform') {

                sh 'terraform apply -auto-approve -input=false tfplan'
              }
            }
        }
        stage('Set Jenkins URL') {
          steps {
              sshagent(credentials : ['wibob-int-jenkins']) {
                  sh """
                  jenkins_dns=`terraform output docker_server_public_dns`
                  cat jenkins-set.groovy | ssh -p 8022 $jenkins_dns groovy =
                  ssh -p 8022 $jenkins_dns safe-restart
                  """
              }
            }
        }


        // stage('Install Perl Libs') {
        //   steps { dir ('terraform') {
        //     sshagent(credentials : ['wibob-Frankfurt-ubuntu']) {
        //       sh '''
        //       APP_DNS=`terraform output web_server_public_dns`
        //       ssh -o StrictHostKeyChecking=no ubuntu@$APP_DNS "sudo ~/ansible/roles/build_dep/files/perl_lib.sh"
        //       '''
        //     }
        //     }
        //   }
        // }

        stage('Put to log essential infrastructure info') {
          steps { dir ('terraform') {
            sshagent(credentials : ['wibob-Frankfurt-ubuntu']) {
            sh '''
            DOCKER_DNS=`terraform output docker_server_public_dns`
            APP_DNS=`terraform output web_server_public_dns`
            echo "Jenkins address: http://${DOCKER_DNS}:8080"
            echo --------------------------------------------
            echo "Application Server Address:"
            echo $APP_DNS
            echo --------------------------------------------
            '''
            }
          }
          }
        }

   }
}
